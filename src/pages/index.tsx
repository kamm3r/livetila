import Head from "next/head";
import Link from "next/link";
import { z } from "zod";
// import { useRouter } from "next/router";
import { zodResolver } from "@hookform/resolvers/zod";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "../@/components/ui/card";
import { Input } from "~/@/components/ui/input";
import { Button } from "~/@/components/ui/button";
import { useForm } from "react-hook-form";
import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "~/@/components/ui/form";

const inputSchema = z.object({
  compId: z
    .string()
    .regex(new RegExp("[0-9]-[0-9]"), {
      message: "It has to look like THIS number-number",
    })
    .min(10, {
      message: "compId must be at least 10 characters.",
    }),
});

export default function Home() {
  // const router = useRouter();
  const form = useForm<z.infer<typeof inputSchema>>({
    resolver: zodResolver(inputSchema),
    defaultValues: {
      compId: "23941-312323",
    },
  });
  function busta(data: z.infer<typeof inputSchema>) {
    console.log(data);
  }
  return (
    <>
      <Head>
        <title>Livetila</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="relative flex h-screen w-screen flex-col">
        <div className="flex min-h-0 flex-1 flex-col">
          <header className="flex items-center justify-between px-4 pb-2 pt-4 sm:px-8 sm:py-4">
            <Link
              href="/"
              className="relative whitespace-nowrap text-2xl font-bold"
            >
              Livetila{" "}
              <sup className="absolute left-[calc(100%+.25rem)] top-0 text-xs font-extrabold text-gray-400">
                [BETA]
              </sup>
            </Link>
            {/* <ThemeSwitcher /> */}
          </header>
          <main className="flex flex-grow flex-col p-4 sm:p-8">
            <div className="flex flex-col items-center">
              <Card>
                <CardHeader>
                  <CardTitle>Competition Overlay</CardTitle>
                  <CardDescription>
                    Get overlay for your live stream. Get competition id from
                    live.tulospalvelu.com
                  </CardDescription>
                </CardHeader>
                <Form {...form}>
                  <form
                    onSubmit={(event) => {
                      event.preventDefault();
                      form.handleSubmit(busta);
                    }}
                  >
                    <CardContent className="flex flex-col gap-1">
                      <FormField
                        control={form.control}
                        name="compId"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Competition id</FormLabel>
                            <FormControl>
                              <Input placeholder="type comp id" {...field} required />
                            </FormControl>
                            <FormDescription className="text-xs text-muted-foreground">
                              Expected format is `number-number`
                            </FormDescription>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      {/* <div className="flex flex-col gap-2">
                    </div> */}
                      {/* {errors.compId && (
                      <p className="text-xs text-red-600">
                        {errors.compId?.message}
                      </p>
                     )} */}
                    </CardContent>
                    <CardFooter>
                      <Button type="submit">Go To</Button>
                    </CardFooter>
                  </form>
                </Form>
              </Card>
            </div>
          </main>
        </div>
      </div>
      {/* <Toaster /> */}
    </>
  );
}
